<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

  <changeSet id="20170329-1521"  author="lauravignoli">
    <comment>This change set migrates the AdverseEvent table from an integer id primary key
        to a UUID of type BINARY(16). </comment>

    <dropForeignKeyConstraint baseTableName="Donation" constraintName="FK_DONATION_ADVERSE_EVENT_ID"/>

    <addColumn tableName="AdverseEvent">
      <column name="id_temp" type="BIGINT" afterColumn="id"/>
    </addColumn>

    <addColumn tableName="AdverseEvent_AUD">
      <column name="id_temp" type="BIGINT" afterColumn="id"/>
    </addColumn>

    <addColumn tableName="Donation">
      <column name="adverseEvent_id_temp" type="BIGINT" afterColumn="adverseEvent_id"/>
    </addColumn>

    <addColumn tableName="Donation_AUD">
      <column name="adverseEvent_id_temp" type="BIGINT" afterColumn="adverseEvent_id"/>
    </addColumn>

    <sql>
      UPDATE AdverseEvent 
      SET id_temp = id;
    </sql>

    <!-- Create Index on temporary id_temp field to make updates referencing it more efficient. -->
    <createIndex indexName="adverseevent_id_temp_index" tableName="AdverseEvent" unique="true">
        <column name="id_temp" type="BIGINT"/>
    </createIndex>

    <sql>
      UPDATE AdverseEvent_AUD 
      SET id_temp = id;
    </sql>

    <sql>
      UPDATE Donation_AUD 
      SET adverseEvent_id_temp = adverseEvent_id;
    </sql>

    <sql>
      UPDATE Donation 
      SET adverseEvent_id_temp = adverseEvent_id;
    </sql>

    <!-- Remove auto increment from the existing id column -->
    <modifyDataType columnName="id" newDataType="BIGINT(20)" tableName="AdverseEvent"/>

    <modifyDataType columnName="id" newDataType="BINARY(16)" tableName="AdverseEvent"/>

    <modifyDataType columnName="id" newDataType="BINARY(16)" tableName="AdverseEvent_AUD"/>

    <modifyDataType columnName="adverseEvent_id" newDataType="BINARY(16)" tableName="Donation"/>

    <modifyDataType columnName="adverseEvent_id" newDataType="BINARY(16)" tableName="Donation_AUD"/>

    <sql>
      UPDATE AdverseEvent 
      SET id = GENERATEBINARYUUID()
      ORDER BY id_temp;
    </sql>

    <sql dbms="mysql">
      ALTER TABLE AdverseEvent ADD id_text varchar(36) GENERATED ALWAYS AS (LCASE(CONCAT_WS('-', 
        HEX(SUBSTR(id,  1, 4)),
        HEX(SUBSTR(id,  5, 2)),
        HEX(SUBSTR(id,  7, 2)),
        HEX(SUBSTR(id,  9, 2)),
        HEX(SUBSTR(id, 11)) )))
      VIRTUAL AFTER id;
    </sql>

    <sql dbms="mysql">
      ALTER TABLE AdverseEvent_AUD ADD id_text varchar(36) GENERATED ALWAYS AS (LCASE(CONCAT_WS('-', 
        HEX(SUBSTR(id,  1, 4)),
        HEX(SUBSTR(id,  5, 2)),
        HEX(SUBSTR(id,  7, 2)),
        HEX(SUBSTR(id,  9, 2)),
        HEX(SUBSTR(id, 11)) )))
      VIRTUAL AFTER id;
    </sql>

    <sql>
      UPDATE AdverseEvent_AUD AS updateTable
        LEFT JOIN AdverseEvent AS joinTable ON (updateTable.id_temp = joinTable.id_temp)
      SET updateTable.id = joinTable.id
      WHERE joinTable.id IS NOT null; 
    </sql>

    <!-- Delete orphaned rows from Audit table. These values uuids cannot be found since the rows were deleted in the original table-->
    <sql>
      DELETE AdverseEvent_AUD
      FROM AdverseEvent_AUD
        LEFT JOIN AdverseEvent AS joinTable ON (AdverseEvent_AUD.id = joinTable.id)
      WHERE joinTable.id IS null
    </sql>

    <sql>
      UPDATE Donation AS updateTable
        LEFT JOIN AdverseEvent AS joinedTable ON (updateTable.adverseEvent_id_temp = joinedTable.id_temp)
      SET updateTable.adverseEvent_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE Donation_AUD AS updateTable
        LEFT JOIN AdverseEvent AS joinedTable ON (updateTable.adverseEvent_id_temp = joinedTable.id_temp)
      SET updateTable.adverseEvent_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <dropColumn columnName="id_temp" tableName="AdverseEvent"/>

    <dropColumn columnName="id_temp" tableName="AdverseEvent_AUD"/>

    <dropColumn columnName="adverseEvent_id_temp" tableName="Donation"/>

    <dropColumn columnName="adverseEvent_id_temp" tableName="Donation_AUD"/>

    <addForeignKeyConstraint baseColumnNames="adverseEvent_id" baseTableName="Donation" constraintName="FK_DONATION_ADVERSE_EVENT_ID"
      referencedColumnNames="id" referencedTableName="AdverseEvent"/>

  </changeSet>
</databaseChangeLog>
