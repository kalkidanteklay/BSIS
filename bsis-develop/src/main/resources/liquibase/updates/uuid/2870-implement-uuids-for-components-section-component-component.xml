<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

  <changeSet id="20170411-1632"  author="tumijacob">
    <comment>This change set migrates the Component table from an integer id primary key
        to a UUID of type BINARY(16). </comment>

    <dropForeignKeyConstraint baseTableName="Component" constraintName="FK50C664CFD946D0A0"/>
    <dropForeignKeyConstraint baseTableName="ComponentStatusChange" constraintName="FKCCE48CB1A8E71476"/>
    <dropForeignKeyConstraint baseTableName="OrderForm_Component" constraintName="fk_OrderForm_Component_Component"/>
    <dropForeignKeyConstraint baseTableName="ReturnForm_Component" constraintName="fk_ReturnForm_Component_Component"/>
    <dropForeignKeyConstraint baseTableName="Transfusion" constraintName="fk_Transfusion_component"/>

    <addColumn tableName="Component">
      <column name="id_temp" type="BIGINT" afterColumn="id"/>
    </addColumn>

    <addColumn tableName="Component_AUD">
      <column name="id_temp" type="BIGINT" afterColumn="id"/>
    </addColumn>

    <addColumn tableName="Component">
      <column name="parentComponent_id_temp" type="BIGINT" afterColumn="parentComponent_id"/>
    </addColumn>

    <addColumn tableName="ComponentStatusChange">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="OrderForm_Component">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="ReturnForm_Component">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="Transfusion">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="Component_AUD">
      <column name="parentComponent_id_temp" type="BIGINT" afterColumn="parentComponent_id"/>
    </addColumn>

    <addColumn tableName="ComponentStatusChange_AUD">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="OrderForm_Component_AUD">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="ReturnForm_Component_AUD">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <addColumn tableName="Transfusion_AUD">
      <column name="component_id_temp" type="BIGINT" afterColumn="component_id"/>
    </addColumn>

    <sql>
      UPDATE Component 
      SET id_temp = id;
    </sql>

    <!-- Create Index on temporary id_temp field to make updates referencing it more efficient. -->
    <createIndex indexName="component_id_temp_index" tableName="Component" unique="true">
        <column name="id_temp" type="BIGINT"/>
    </createIndex>

    <sql>
      UPDATE Component_AUD 
      SET id_temp = id;
    </sql>

    <sql>
      UPDATE Component_AUD 
      SET parentComponent_id_temp = parentComponent_id;
    </sql>

    <sql>
      UPDATE ComponentStatusChange_AUD 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE OrderForm_Component_AUD 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE ReturnForm_Component_AUD 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE Transfusion_AUD 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE Component 
      SET parentComponent_id_temp = parentComponent_id;
    </sql>

    <sql>
      UPDATE ComponentStatusChange 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE OrderForm_Component 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE ReturnForm_Component 
      SET component_id_temp = component_id;
    </sql>

    <sql>
      UPDATE Transfusion 
      SET component_id_temp = component_id;
    </sql>

    <!-- Remove auto increment from the existing id column -->
    <modifyDataType columnName="id" newDataType="BIGINT(20)" tableName="Component"/>

    <modifyDataType columnName="id" newDataType="BINARY(16)" tableName="Component"/>

    <modifyDataType columnName="id" newDataType="BINARY(16)" tableName="Component_AUD"/>

    <modifyDataType columnName="parentComponent_id" newDataType="BINARY(16)" tableName="Component"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="ComponentStatusChange"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="OrderForm_Component"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="ReturnForm_Component"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="Transfusion"/>

    <modifyDataType columnName="parentComponent_id" newDataType="BINARY(16)" tableName="Component_AUD"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="ComponentStatusChange_AUD"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="OrderForm_Component_AUD"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="ReturnForm_Component_AUD"/>
    <modifyDataType columnName="component_id" newDataType="BINARY(16)" tableName="Transfusion_AUD"/>

    <sql>
      UPDATE Component 
      SET id = GENERATEBINARYUUID()
      ORDER BY id_temp;
    </sql>

    <sql dbms="mysql">
      ALTER TABLE Component ADD id_text varchar(36) GENERATED ALWAYS AS (LCASE(CONCAT_WS('-', 
        HEX(SUBSTR(id,  1, 4)),
        HEX(SUBSTR(id,  5, 2)),
        HEX(SUBSTR(id,  7, 2)),
        HEX(SUBSTR(id,  9, 2)),
        HEX(SUBSTR(id, 11)) )))
      VIRTUAL AFTER id;
    </sql>

    <sql dbms="mysql">
      ALTER TABLE Component_AUD ADD id_text varchar(36) GENERATED ALWAYS AS (LCASE(CONCAT_WS('-', 
        HEX(SUBSTR(id,  1, 4)),
        HEX(SUBSTR(id,  5, 2)),
        HEX(SUBSTR(id,  7, 2)),
        HEX(SUBSTR(id,  9, 2)),
        HEX(SUBSTR(id, 11)) )))
      VIRTUAL AFTER id;
    </sql>

    <sql>
      UPDATE Component_AUD AS updateTable
        LEFT JOIN Component AS joinTable ON (updateTable.id_temp = joinTable.id_temp)
      SET updateTable.id = joinTable.id
      WHERE joinTable.id IS NOT null; 
    </sql>

    <!-- Delete orphaned rows from Audit table. These values uuids cannot be found since the rows were deleted in the original table-->
    <sql>
      DELETE Component_AUD
      FROM Component_AUD
        LEFT JOIN Component AS joinTable ON (Component_AUD.id = joinTable.id)
      WHERE joinTable.id IS null
    </sql>

    <sql>
      UPDATE Component AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.parentComponent_id_temp = joinedTable.id_temp)
      SET updateTable.parentComponent_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE ComponentStatusChange AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE OrderForm_Component AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE ReturnForm_Component AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE Transfusion AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE Component_AUD AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.parentComponent_id_temp = joinedTable.id_temp)
      SET updateTable.parentComponent_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE ComponentStatusChange_AUD AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE OrderForm_Component_AUD AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE ReturnForm_Component_AUD AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <sql>
      UPDATE Transfusion_AUD AS updateTable
        LEFT JOIN Component AS joinedTable ON (updateTable.component_id_temp = joinedTable.id_temp)
      SET updateTable.component_id = joinedTable.id 
      WHERE joinedTable.id IS NOT null; 
    </sql>

    <dropColumn columnName="id_temp" tableName="Component"/>

    <dropColumn columnName="id_temp" tableName="Component_AUD"/>

    <dropColumn columnName="parentComponent_id_temp" tableName="Component"/>

    <dropColumn columnName="component_id_temp" tableName="ComponentStatusChange"/>

    <dropColumn columnName="component_id_temp" tableName="OrderForm_Component"/>

    <dropColumn columnName="component_id_temp" tableName="ReturnForm_Component"/>

    <dropColumn columnName="component_id_temp" tableName="Transfusion"/>

    <dropColumn columnName="parentComponent_id_temp" tableName="Component_AUD"/>

    <dropColumn columnName="component_id_temp" tableName="ComponentStatusChange_AUD"/>

    <dropColumn columnName="component_id_temp" tableName="OrderForm_Component_AUD"/>

    <dropColumn columnName="component_id_temp" tableName="ReturnForm_Component_AUD"/>

    <dropColumn columnName="component_id_temp" tableName="Transfusion_AUD"/>

    <addForeignKeyConstraint baseColumnNames="parentComponent_id" baseTableName="Component" constraintName="fk_parentComponent_Component"
      referencedColumnNames="id" referencedTableName="Component"/>

    <addForeignKeyConstraint baseColumnNames="component_id" baseTableName="ComponentStatusChange" constraintName="fk_ComponentStatusChange_Component"
      referencedColumnNames="id" referencedTableName="Component"/>

    <addForeignKeyConstraint baseColumnNames="component_id" baseTableName="OrderForm_Component" constraintName="fk_OrderForm_Component_Component"
      referencedColumnNames="id" referencedTableName="Component"/>

    <addForeignKeyConstraint baseColumnNames="component_id" baseTableName="ReturnForm_Component" constraintName="fk_ReturnForm_Component_Component"
      referencedColumnNames="id" referencedTableName="Component"/>

    <addForeignKeyConstraint baseColumnNames="component_id" baseTableName="Transfusion" constraintName="fk_Transfusion_component"
      referencedColumnNames="id" referencedTableName="Component"/>


  </changeSet>
</databaseChangeLog>